Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  25.6680 MiB  25.6680 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  25.6680 MiB   0.0000 MiB           1       time_start = time.time()
    65  25.6680 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  25.6680 MiB   0.0000 MiB           1       time_end = time.time()
    67  25.6680 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  25.6836 MiB  25.6836 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  25.6836 MiB   0.0000 MiB           1       time_start = time.time()
    77  25.6836 MiB   0.0000 MiB           1       res = instance.match(text)
    78  25.6836 MiB   0.0000 MiB           1       time_end = time.time()
    79  25.6836 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  25.7109 MiB  25.7109 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  25.7109 MiB   0.0000 MiB           1       time_start = time.time()
    77  25.7109 MiB   0.0000 MiB           1       res = instance.match(text)
    78  25.7109 MiB   0.0000 MiB           1       time_end = time.time()
    79  25.7109 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  25.7109 MiB  25.7109 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  25.7109 MiB   0.0000 MiB           1       time_start = time.time()
    77  25.7109 MiB   0.0000 MiB           1       res = instance.match(text)
    78  25.7109 MiB   0.0000 MiB           1       time_end = time.time()
    79  25.7109 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: BruteForce
Blocklist size: 10
Creation time: 0.0

Test case: 1_short
Time used: 0.00500035285949707

Test case: 2_medium
Time used: 0.01755356788635254

Test case: 3_long
Time used: 0.04404950141906738
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  25.7109 MiB  25.7109 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  25.7109 MiB   0.0000 MiB           1       time_start = time.time()
    65  25.7109 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  25.7109 MiB   0.0000 MiB           1       time_end = time.time()
    67  25.7109 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  25.7148 MiB  25.7148 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  25.7148 MiB   0.0000 MiB           1       time_start = time.time()
    77  25.7148 MiB   0.0000 MiB           1       res = instance.match(text)
    78  25.7148 MiB   0.0000 MiB           1       time_end = time.time()
    79  25.7148 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  25.7227 MiB  25.7227 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  25.7227 MiB   0.0000 MiB           1       time_start = time.time()
    77  25.7227 MiB   0.0000 MiB           1       res = instance.match(text)
    78  25.7227 MiB   0.0000 MiB           1       time_end = time.time()
    79  25.7227 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  25.7227 MiB  25.7227 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  25.7227 MiB   0.0000 MiB           1       time_start = time.time()
    77  25.7227 MiB   0.0000 MiB           1       res = instance.match(text)
    78  25.7227 MiB   0.0000 MiB           1       time_end = time.time()
    79  25.7227 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: Native
Blocklist size: 10
Creation time: 0.0

Test case: 1_short
Time used: 0.0

Test case: 2_medium
Time used: 0.0

Test case: 3_long
Time used: 0.0
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  25.7266 MiB  25.7266 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  25.7266 MiB   0.0000 MiB           1       time_start = time.time()
    65  26.6172 MiB   0.8906 MiB           1       instance = algo(blocklist_content)
    66  26.6172 MiB   0.0000 MiB           1       time_end = time.time()
    67  26.6172 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.6172 MiB  26.6172 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.6172 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.6172 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.6172 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.6172 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.6172 MiB  26.6172 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.6172 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.6250 MiB   0.0078 MiB           1       res = instance.match(text)
    78  26.6250 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.6250 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.6250 MiB  26.6250 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.6250 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.6289 MiB   0.0039 MiB           1       res = instance.match(text)
    78  26.6289 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.6289 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: AC
Blocklist size: 10
Creation time: 0.052997589111328125

Test case: 1_short
Time used: 0.009999275207519531

Test case: 2_medium
Time used: 0.035997629165649414

Test case: 3_long
Time used: 0.09199881553649902
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.2305 MiB  26.2305 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.2305 MiB   0.0000 MiB           1       time_start = time.time()
    65  26.2305 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  26.2305 MiB   0.0000 MiB           1       time_end = time.time()
    67  26.2305 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2305 MiB  26.2305 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2305 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2305 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2305 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2305 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2305 MiB  26.2305 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2305 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2305 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2305 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2305 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2344 MiB  26.2344 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2344 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2383 MiB   0.0039 MiB           1       res = instance.match(text)
    78  26.2383 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2383 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: WM
Blocklist size: 10
Creation time: 0.002000570297241211

Test case: 1_short
Time used: 0.002000093460083008

Test case: 2_medium
Time used: 0.0059986114501953125

Test case: 3_long
Time used: 0.014000892639160156
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.2500 MiB  26.2500 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    65  26.2500 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    67  26.2500 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2500 MiB  26.2500 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2500 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2500 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2500 MiB  26.2500 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2500 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2500 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2500 MiB  26.2500 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2500 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2500 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: BruteForce
Blocklist size: 100
Creation time: 0.0

Test case: 1_short
Time used: 0.043000221252441406

Test case: 2_medium
Time used: 0.15599894523620605

Test case: 3_long
Time used: 0.41396546363830566
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.2500 MiB  26.2500 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    65  26.2500 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    67  26.2500 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2500 MiB  26.2500 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2500 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2500 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2500 MiB  26.2500 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2500 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2500 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.2500 MiB  26.2500 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.2500 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.2500 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.2500 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: Native
Blocklist size: 100
Creation time: 0.0

Test case: 1_short
Time used: 0.0010008811950683594

Test case: 2_medium
Time used: 0.0009980201721191406

Test case: 3_long
Time used: 0.0010001659393310547
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.2500 MiB  26.2500 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.2500 MiB   0.0000 MiB           1       time_start = time.time()
    65  36.9453 MiB  10.6953 MiB           1       instance = algo(blocklist_content)
    66  36.9453 MiB   0.0000 MiB           1       time_end = time.time()
    67  36.9453 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  36.9492 MiB  36.9492 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  36.9492 MiB   0.0000 MiB           1       time_start = time.time()
    77  36.9492 MiB   0.0000 MiB           1       res = instance.match(text)
    78  36.9492 MiB   0.0000 MiB           1       time_end = time.time()
    79  36.9492 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  36.9492 MiB  36.9492 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  36.9492 MiB   0.0000 MiB           1       time_start = time.time()
    77  36.9492 MiB   0.0000 MiB           1       res = instance.match(text)
    78  36.9492 MiB   0.0000 MiB           1       time_end = time.time()
    79  36.9492 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  36.9531 MiB  36.9531 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  36.9570 MiB   0.0039 MiB           1       time_start = time.time()
    77  36.9609 MiB   0.0039 MiB           1       res = instance.match(text)
    78  36.9609 MiB   0.0000 MiB           1       time_end = time.time()
    79  36.9609 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: AC
Blocklist size: 100
Creation time: 0.6389780044555664

Test case: 1_short
Time used: 0.010000467300415039

Test case: 2_medium
Time used: 0.035747528076171875

Test case: 3_long
Time used: 0.09554576873779297
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.3008 MiB  26.3008 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.3008 MiB   0.0000 MiB           1       time_start = time.time()
    65  26.3164 MiB   0.0156 MiB           1       instance = algo(blocklist_content)
    66  26.3164 MiB   0.0000 MiB           1       time_end = time.time()
    67  26.3164 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.3164 MiB  26.3164 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.3164 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.3164 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.3164 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.3164 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.3164 MiB  26.3164 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.3164 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.3164 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.3164 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.3164 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.3164 MiB  26.3164 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.3164 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.3750 MiB   0.0586 MiB           1       res = instance.match(text)
    78  26.3750 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.3750 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: WM
Blocklist size: 100
Creation time: 0.007999658584594727

Test case: 1_short
Time used: 0.003996849060058594

Test case: 2_medium
Time used: 0.013673067092895508

Test case: 3_long
Time used: 0.032628774642944336
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.7070 MiB  26.7070 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.7070 MiB   0.0000 MiB           1       time_start = time.time()
    65  26.7070 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  26.7070 MiB   0.0000 MiB           1       time_end = time.time()
    67  26.7070 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.7070 MiB  26.7070 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.7070 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.7070 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.7070 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.7070 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.7070 MiB  26.7070 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.7070 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.7070 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.7070 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.7070 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.7109 MiB  26.7109 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.7109 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.7109 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.7109 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.7109 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: BruteForce
Blocklist size: 1k
Creation time: 0.0

Test case: 1_short
Time used: 0.41849517822265625

Test case: 2_medium
Time used: 1.5543549060821533

Test case: 3_long
Time used: 4.216675281524658
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.7109 MiB  26.7109 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.7109 MiB   0.0000 MiB           1       time_start = time.time()
    65  26.7109 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  26.7109 MiB   0.0000 MiB           1       time_end = time.time()
    67  26.7109 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.7109 MiB  26.7109 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.7109 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.7109 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.7109 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.7109 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.7109 MiB  26.7109 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.7109 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.7109 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.7109 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.7109 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  26.7109 MiB  26.7109 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  26.7109 MiB   0.0000 MiB           1       time_start = time.time()
    77  26.7109 MiB   0.0000 MiB           1       res = instance.match(text)
    78  26.7109 MiB   0.0000 MiB           1       time_end = time.time()
    79  26.7109 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: Native
Blocklist size: 1k
Creation time: 0.0

Test case: 1_short
Time used: 0.0030024051666259766

Test case: 2_medium
Time used: 0.0029976367950439453

Test case: 3_long
Time used: 0.002998828887939453
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  26.7109 MiB  26.7109 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  26.7109 MiB   0.0000 MiB           1       time_start = time.time()
    65 141.1016 MiB 114.3906 MiB           1       instance = algo(blocklist_content)
    66 141.1016 MiB   0.0000 MiB           1       time_end = time.time()
    67 141.1016 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 141.1016 MiB 141.1016 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 141.1016 MiB   0.0000 MiB           1       time_start = time.time()
    77 141.1016 MiB   0.0000 MiB           1       res = instance.match(text)
    78 141.1016 MiB   0.0000 MiB           1       time_end = time.time()
    79 141.1016 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 141.1016 MiB 141.1016 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 141.1016 MiB   0.0000 MiB           1       time_start = time.time()
    77 141.1016 MiB   0.0000 MiB           1       res = instance.match(text)
    78 141.1016 MiB   0.0000 MiB           1       time_end = time.time()
    79 141.1016 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 141.1016 MiB 141.1016 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 141.1016 MiB   0.0000 MiB           1       time_start = time.time()
    77 141.1250 MiB   0.0234 MiB           1       res = instance.match(text)
    78 141.1250 MiB   0.0000 MiB           1       time_end = time.time()
    79 141.1250 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: AC
Blocklist size: 1k
Creation time: 6.66822624206543

Test case: 1_short
Time used: 0.010000228881835938

Test case: 2_medium
Time used: 0.03699755668640137

Test case: 3_long
Time used: 0.09665107727050781
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  28.8711 MiB  28.8711 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  28.8711 MiB   0.0000 MiB           1       time_start = time.time()
    65  28.9414 MiB   0.0703 MiB           1       instance = algo(blocklist_content)
    66  28.9414 MiB   0.0000 MiB           1       time_end = time.time()
    67  28.9414 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  28.9414 MiB  28.9414 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  28.9414 MiB   0.0000 MiB           1       time_start = time.time()
    77  28.9414 MiB   0.0000 MiB           1       res = instance.match(text)
    78  28.9414 MiB   0.0000 MiB           1       time_end = time.time()
    79  28.9414 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  28.9453 MiB  28.9453 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  28.9453 MiB   0.0000 MiB           1       time_start = time.time()
    77  28.9453 MiB   0.0000 MiB           1       res = instance.match(text)
    78  28.9453 MiB   0.0000 MiB           1       time_end = time.time()
    79  28.9453 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  28.9453 MiB  28.9453 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  28.9453 MiB   0.0000 MiB           1       time_start = time.time()
    77  28.9180 MiB  -0.0273 MiB           1       res = instance.match(text)
    78  28.9180 MiB   0.0000 MiB           1       time_end = time.time()
    79  28.9180 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: WM
Blocklist size: 1k
Creation time: 0.04456162452697754

Test case: 1_short
Time used: 0.018000125885009766

Test case: 2_medium
Time used: 0.06847381591796875

Test case: 3_long
Time used: 0.17960834503173828
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  29.3047 MiB  29.3047 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  29.3047 MiB   0.0000 MiB           1       time_start = time.time()
    65  29.3047 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  29.3047 MiB   0.0000 MiB           1       time_end = time.time()
    67  29.3047 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  29.3047 MiB  29.3047 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  29.3047 MiB   0.0000 MiB           1       time_start = time.time()
    77  29.3047 MiB   0.0000 MiB           1       res = instance.match(text)
    78  29.3047 MiB   0.0000 MiB           1       time_end = time.time()
    79  29.3047 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  29.3047 MiB  29.3047 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  29.3047 MiB   0.0000 MiB           1       time_start = time.time()
    77  29.3398 MiB   0.0352 MiB           1       res = instance.match(text)
    78  29.3398 MiB   0.0000 MiB           1       time_end = time.time()
    79  29.3398 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  29.3398 MiB  29.3398 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  29.3398 MiB   0.0000 MiB           1       time_start = time.time()
    77  29.2852 MiB  -0.0547 MiB           1       res = instance.match(text)
    78  29.2852 MiB   0.0000 MiB           1       time_end = time.time()
    79  29.2852 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: BruteForce
Blocklist size: 10k
Creation time: 0.0

Test case: 1_short
Time used: 4.100111246109009

Test case: 2_medium
Time used: 15.994860410690308

Test case: 3_long
Time used: 42.267812967300415
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  29.2852 MiB  29.2852 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  29.2852 MiB   0.0000 MiB           1       time_start = time.time()
    65  29.2852 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  29.2852 MiB   0.0000 MiB           1       time_end = time.time()
    67  29.2852 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  29.2852 MiB  29.2852 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  29.2852 MiB   0.0000 MiB           1       time_start = time.time()
    77  29.2852 MiB   0.0000 MiB           1       res = instance.match(text)
    78  29.2852 MiB   0.0000 MiB           1       time_end = time.time()
    79  29.2852 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  29.2852 MiB  29.2852 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  29.2852 MiB   0.0000 MiB           1       time_start = time.time()
    77  29.2852 MiB   0.0000 MiB           1       res = instance.match(text)
    78  29.2852 MiB   0.0000 MiB           1       time_end = time.time()
    79  29.2852 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  29.2852 MiB  29.2852 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  29.2852 MiB   0.0000 MiB           1       time_start = time.time()
    77  29.2852 MiB   0.0000 MiB           1       res = instance.match(text)
    78  29.2852 MiB   0.0000 MiB           1       time_end = time.time()
    79  29.2852 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: Native
Blocklist size: 10k
Creation time: 0.0

Test case: 1_short
Time used: 0.02900099754333496

Test case: 2_medium
Time used: 0.029999971389770508

Test case: 3_long
Time used: 0.03300118446350098
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  29.2852 MiB  29.2852 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  29.2852 MiB   0.0000 MiB           1       time_start = time.time()
    65 1012.5586 MiB 983.2734 MiB           1       instance = algo(blocklist_content)
    66 1012.5586 MiB   0.0000 MiB           1       time_end = time.time()
    67 1012.5586 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 1012.5586 MiB 1012.5586 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 1012.5586 MiB   0.0000 MiB           1       time_start = time.time()
    77 1012.5586 MiB   0.0000 MiB           1       res = instance.match(text)
    78 1012.5586 MiB   0.0000 MiB           1       time_end = time.time()
    79 1012.5586 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 1012.5586 MiB 1012.5586 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 1012.5586 MiB   0.0000 MiB           1       time_start = time.time()
    77 1012.5625 MiB   0.0039 MiB           1       res = instance.match(text)
    78 1012.5625 MiB   0.0000 MiB           1       time_end = time.time()
    79 1012.5625 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 1012.5625 MiB 1012.5625 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 1012.5625 MiB   0.0000 MiB           1       time_start = time.time()
    77 1012.5703 MiB   0.0078 MiB           1       res = instance.match(text)
    78 1012.5703 MiB   0.0000 MiB           1       time_end = time.time()
    79 1012.5703 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: AC
Blocklist size: 10k
Creation time: 58.331700801849365

Test case: 1_short
Time used: 0.009996175765991211

Test case: 2_medium
Time used: 0.03700113296508789

Test case: 3_long
Time used: 0.09697484970092773
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  34.8398 MiB  34.8398 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  34.8398 MiB   0.0000 MiB           1       time_start = time.time()
    65  35.4648 MiB   0.6250 MiB           1       instance = algo(blocklist_content)
    66  35.4648 MiB   0.0000 MiB           1       time_end = time.time()
    67  35.4648 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.4648 MiB  35.4648 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.4648 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.4648 MiB   0.0000 MiB           1       res = instance.match(text)
    78  35.4648 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.4648 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.4648 MiB  35.4648 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.4648 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.4727 MiB   0.0078 MiB           1       res = instance.match(text)
    78  35.4727 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.4727 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.4727 MiB  35.4727 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.4727 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.5078 MiB   0.0352 MiB           1       res = instance.match(text)
    78  35.5078 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.5078 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: WM
Blocklist size: 10k
Creation time: 0.45772361755371094

Test case: 1_short
Time used: 0.0840308666229248

Test case: 2_medium
Time used: 0.33417487144470215

Test case: 3_long
Time used: 0.8561968803405762
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  35.2031 MiB  35.2031 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  35.2031 MiB   0.0000 MiB           1       time_start = time.time()
    65  35.2031 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  35.2031 MiB   0.0000 MiB           1       time_end = time.time()
    67  35.2031 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.2031 MiB  35.2031 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.2070 MiB   0.0039 MiB           1       time_start = time.time()
    77  35.2070 MiB   0.0000 MiB           1       res = instance.match(text)
    78  35.2070 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.2070 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.2070 MiB  35.2070 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.2070 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.2070 MiB   0.0000 MiB           1       res = instance.match(text)
    78  35.2070 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.2070 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.2070 MiB  35.2070 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.2070 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.2305 MiB   0.0234 MiB           1       res = instance.match(text)
    78  35.2305 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.2305 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: BruteForce
Blocklist size: full
Creation time: 0.0

Test case: 1_short
Time used: 22.252042770385742

Test case: 2_medium
Time used: 86.62791395187378

Test case: 3_long
Time used: 227.99436616897583
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  35.2305 MiB  35.2305 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  35.2305 MiB   0.0000 MiB           1       time_start = time.time()
    65  35.2305 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  35.2305 MiB   0.0000 MiB           1       time_end = time.time()
    67  35.2305 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.2383 MiB  35.2383 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.2383 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.2383 MiB   0.0000 MiB           1       res = instance.match(text)
    78  35.2383 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.2383 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.2383 MiB  35.2383 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.2383 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.2383 MiB   0.0000 MiB           1       res = instance.match(text)
    78  35.2383 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.2383 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  35.2383 MiB  35.2383 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  35.2383 MiB   0.0000 MiB           1       time_start = time.time()
    77  35.2383 MiB   0.0000 MiB           1       res = instance.match(text)
    78  35.2383 MiB   0.0000 MiB           1       time_end = time.time()
    79  35.2383 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: Native
Blocklist size: full
Creation time: 0.0

Test case: 1_short
Time used: 0.15398573875427246

Test case: 2_medium
Time used: 0.16798973083496094

Test case: 3_long
Time used: 0.1782071590423584
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  35.2383 MiB  35.2383 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  35.2383 MiB   0.0000 MiB           1       time_start = time.time()
    65 4621.5859 MiB 4586.3477 MiB           1       instance = algo(blocklist_content)
    66 4621.5859 MiB   0.0000 MiB           1       time_end = time.time()
    67 4621.5859 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 4621.5859 MiB 4621.5859 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 4621.5859 MiB   0.0000 MiB           1       time_start = time.time()
    77 4621.5898 MiB   0.0039 MiB           1       res = instance.match(text)
    78 4621.5898 MiB   0.0000 MiB           1       time_end = time.time()
    79 4621.5898 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 4621.5898 MiB 4621.5898 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 4621.5898 MiB   0.0000 MiB           1       time_start = time.time()
    77 4621.5898 MiB   0.0000 MiB           1       res = instance.match(text)
    78 4621.5898 MiB   0.0000 MiB           1       time_end = time.time()
    79 4621.5898 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 4621.5898 MiB 4621.5898 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 4621.5898 MiB   0.0000 MiB           1       time_start = time.time()
    77 4621.5938 MiB   0.0039 MiB           1       res = instance.match(text)
    78 4621.5938 MiB   0.0000 MiB           1       time_end = time.time()
    79 4621.5938 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: AC
Blocklist size: full
Creation time: 277.0253345966339

Test case: 1_short
Time used: 0.01100015640258789

Test case: 2_medium
Time used: 0.03800058364868164

Test case: 3_long
Time used: 0.09834408760070801
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  48.2070 MiB  48.2070 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  48.2070 MiB   0.0000 MiB           1       time_start = time.time()
    65  53.5938 MiB   5.3867 MiB           1       instance = algo(blocklist_content)
    66  53.5938 MiB   0.0000 MiB           1       time_end = time.time()
    67  53.5938 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  53.5938 MiB  53.5938 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  53.5938 MiB   0.0000 MiB           1       time_start = time.time()
    77  54.0586 MiB   0.4648 MiB           1       res = instance.match(text)
    78  54.0586 MiB   0.0000 MiB           1       time_end = time.time()
    79  54.0586 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  54.0586 MiB  54.0586 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  54.0586 MiB   0.0000 MiB           1       time_start = time.time()
    77  54.1602 MiB   0.1016 MiB           1       res = instance.match(text)
    78  54.1602 MiB   0.0000 MiB           1       time_end = time.time()
    79  54.1602 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  54.1602 MiB  54.1602 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  54.1602 MiB   0.0000 MiB           1       time_start = time.time()
    77  54.1484 MiB  -0.0117 MiB           1       res = instance.match(text)
    78  54.1484 MiB   0.0000 MiB           1       time_end = time.time()
    79  54.1484 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: WM
Blocklist size: full
Creation time: 2.4823031425476074

Test case: 1_short
Time used: 0.41436195373535156

Test case: 2_medium
Time used: 1.6662774085998535

Test case: 3_long
Time used: 4.276707172393799
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  47.6836 MiB  47.6836 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  47.6836 MiB   0.0000 MiB           1       time_start = time.time()
    65  47.6836 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  47.6836 MiB   0.0000 MiB           1       time_end = time.time()
    67  47.6836 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  47.6836 MiB  47.6836 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  47.6836 MiB   0.0000 MiB           1       time_start = time.time()
    77  47.6836 MiB   0.0000 MiB           1       res = instance.match(text)
    78  47.6836 MiB   0.0000 MiB           1       time_end = time.time()
    79  47.6836 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  47.6836 MiB  47.6836 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  47.6836 MiB   0.0000 MiB           1       time_start = time.time()
    77  47.6836 MiB   0.0000 MiB           1       res = instance.match(text)
    78  47.6836 MiB   0.0000 MiB           1       time_end = time.time()
    79  47.6836 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  47.6836 MiB  47.6836 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  47.6836 MiB   0.0000 MiB           1       time_start = time.time()
    77  47.6836 MiB   0.0000 MiB           1       res = instance.match(text)
    78  47.6836 MiB   0.0000 MiB           1       time_end = time.time()
    79  47.6836 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: BruteForce
Blocklist size: wm
Creation time: 0.0

Test case: 1_short
Time used: 5.047749757766724

Test case: 2_medium
Time used: 18.93744134902954

Test case: 3_long
Time used: 50.07835388183594
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  46.6836 MiB  46.6836 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  46.6836 MiB   0.0000 MiB           1       time_start = time.time()
    65  46.6836 MiB   0.0000 MiB           1       instance = algo(blocklist_content)
    66  46.6836 MiB   0.0000 MiB           1       time_end = time.time()
    67  46.6836 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  46.6836 MiB  46.6836 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  46.6836 MiB   0.0000 MiB           1       time_start = time.time()
    77  46.6836 MiB   0.0000 MiB           1       res = instance.match(text)
    78  46.6836 MiB   0.0000 MiB           1       time_end = time.time()
    79  46.6836 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  46.6836 MiB  46.6836 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  46.6836 MiB   0.0000 MiB           1       time_start = time.time()
    77  46.6836 MiB   0.0000 MiB           1       res = instance.match(text)
    78  46.6836 MiB   0.0000 MiB           1       time_end = time.time()
    79  46.6836 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  46.6836 MiB  46.6836 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  46.6836 MiB   0.0000 MiB           1       time_start = time.time()
    77  46.6836 MiB   0.0000 MiB           1       res = instance.match(text)
    78  46.6836 MiB   0.0000 MiB           1       time_end = time.time()
    79  46.6836 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: Native
Blocklist size: wm
Creation time: 0.0

Test case: 1_short
Time used: 0.03399968147277832

Test case: 2_medium
Time used: 0.035997867584228516

Test case: 3_long
Time used: 0.03899669647216797
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  46.6836 MiB  46.6836 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  46.6836 MiB   0.0000 MiB           1       time_start = time.time()
    65 632.8359 MiB 586.1523 MiB           1       instance = algo(blocklist_content)
    66 632.8359 MiB   0.0000 MiB           1       time_end = time.time()
    67 632.8359 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 632.8359 MiB 632.8359 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 632.8359 MiB   0.0000 MiB           1       time_start = time.time()
    77 632.8398 MiB   0.0039 MiB           1       res = instance.match(text)
    78 632.8398 MiB   0.0000 MiB           1       time_end = time.time()
    79 632.8398 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 632.8398 MiB 632.8398 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 632.8398 MiB   0.0000 MiB           1       time_start = time.time()
    77 632.8398 MiB   0.0000 MiB           1       res = instance.match(text)
    78 632.8398 MiB   0.0000 MiB           1       time_end = time.time()
    79 632.8398 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70 632.8398 MiB 632.8398 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76 632.8398 MiB   0.0000 MiB           1       time_start = time.time()
    77 632.8516 MiB   0.0117 MiB           1       res = instance.match(text)
    78 632.8516 MiB   0.0000 MiB           1       time_end = time.time()
    79 632.8516 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: AC
Blocklist size: wm
Creation time: 36.08822059631348

Test case: 1_short
Time used: 0.01100015640258789

Test case: 2_medium
Time used: 0.0377507209777832

Test case: 3_long
Time used: 0.09665656089782715
========================================
Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    58  43.3281 MiB  43.3281 MiB           1   def _create_instance(
    59                                             algo: type[BaseAlgo], blocklist_content: list[Pattern]
    60                                         ) -> tuple[BaseAlgo, Time]:
    61                                             """
    62                                             Create an instance of a given algorithm.
    63                                             """
    64  43.3281 MiB   0.0000 MiB           1       time_start = time.time()
    65  44.2656 MiB   0.9375 MiB           1       instance = algo(blocklist_content)
    66  44.2656 MiB   0.0000 MiB           1       time_end = time.time()
    67  44.2656 MiB   0.0000 MiB           1       return instance, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  44.2656 MiB  44.2656 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  44.2656 MiB   0.0000 MiB           1       time_start = time.time()
    77  44.3125 MiB   0.0469 MiB           1       res = instance.match(text)
    78  44.3125 MiB   0.0000 MiB           1       time_end = time.time()
    79  44.3125 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  44.3125 MiB  44.3125 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  44.3125 MiB   0.0000 MiB           1       time_start = time.time()
    77  44.3125 MiB   0.0000 MiB           1       res = instance.match(text)
    78  44.3125 MiB   0.0000 MiB           1       time_end = time.time()
    79  44.3125 MiB   0.0000 MiB           1       return res, time_end - time_start


Filename: C:\Users\Admin\Downloads\words\algorithms\python\tests\benchmark.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    70  44.3125 MiB  44.3125 MiB           1   def _match_with_instance(
    71                                             instance: BaseAlgo, text: TargetText
    72                                         ) -> tuple[MatchResult, Time]:
    73                                             """
    74                                             Match a given test case with a given instance of an algorithm.
    75                                             """
    76  44.3125 MiB   0.0000 MiB           1       time_start = time.time()
    77  44.3438 MiB   0.0312 MiB           1       res = instance.match(text)
    78  44.3438 MiB   0.0000 MiB           1       time_end = time.time()
    79  44.3438 MiB   0.0000 MiB           1       return res, time_end - time_start


========================================
Algorithm: WM
Blocklist size: wm
Creation time: 0.5373671054840088

Test case: 1_short
Time used: 0.13553333282470703

Test case: 2_medium
Time used: 0.5262806415557861

Test case: 3_long
Time used: 1.3368289470672607
========================================
